import pandas as pd
import numpy as np
import os


def store_data(dataframe:pd.DataFrame, file_path:str):
    """
    Creates or completes a csv based on the supplied dataframe
    :param dataframe: Pandas dataframe containing the various data generated by the perceptron during training.
    :param file_path: Path to the csv file containing the data to be stored.
    :return: returns None
    """
    if os.path.isfile(file_path):
        df = pd.read_csv(file_path, index_col=0, sep=";")
        frames = [dataframe, df]
        big_dataframe = pd.concat(frames, axis=1)
    else:
        big_dataframe = dataframe
    print(big_dataframe)
    big_dataframe.to_csv('data.csv', index=True, sep=";")





def add_p_data_to_dataframe(iteration:int, weights:list, variables:list, obtained_value:float,expected_value:float):
    """
    Retrieves the various data generated by the perceptron and stores them in a pandas dataframe.
    :param iteration:
    :param weights:
    :param variables:
    :param obtained_value:
    :param expected_value:
    :return:
    """
    p_data = {f"Iteration {iteration}":{"weights":weights, "variables":variables, "obtained_value": obtained_value, "expected_value": expected_value}}
    dtf = pd.DataFrame(p_data)
    return dtf

# store_data(add_p_data_to_dataframe(4,[5,7],[8,9],10.5,10.6), "./data.csv")
# df = pd.read_csv("data.csv", index_col=0)
# print(df)